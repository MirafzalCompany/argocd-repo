apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 58.0.0
    helm:
      releaseName: kube-prometheus-stack
      valuesObject:
        defaultRules:
          create: true
          rules:
            etcd: false
            kubeScheduler: false

        kubeScheduler:
          enabled: false

        kubeEtcd:
          enabled: false

        alertmanager:
          enabled: true

        grafana:
          enabled: true
          adminPassword: "F4AU6kGQ4T17t3XJ7b4Ya0Ac2zmh7nsLipN"
          persistence:
            enabled: true
            storageClassName: do-block-storage
            accessModes: [ "ReadWriteOnce" ]
            size: 15Gi
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: "true"
              cert-manager.io/cluster-issuer: letsencrypt-prod
            ingressClassName: "nginx"
            hosts:
              - grafana.staging.mirafzal.uz
            tls:
              - secretName: letsencrypt-cert-secret
                hosts:
                  - grafana.staging.mirafzal.uz

        prometheusOperator:
          enabled: true

        prometheus:
          enabled: true
          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: do-block-storage
                  accessModes: [ "ReadWriteOnce" ]
                  resources:
                    requests:
                      storage: 15Gi

  destination:
    server: "https://kubernetes.default.svc"
    namespace: kube-prometheus-stack
  syncPolicy:
    syncOptions:
      - ServerSideApply=true

---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-prometheus-stack