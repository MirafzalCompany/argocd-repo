apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd-self
  namespace: argocd
spec:
  project: default
  source:
    chart: argo-cd
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 6.7.2
    helm:
      releaseName: argocd
      valuesObject:
        configs:
          cm:
            dex.config: |
              connectors:
                - type: github
                  id: github
                  name: GitHub
                  config:
                    clientID: 6f950ececcb7b12c9696
                    clientSecret: 69981c27aaad0cac445a58b73334398f83999af5
                    orgs:
                    - name: MirafzalCompany
            exec.enabled: 'true'
            server.rbac.log.enforce.enable: 'false'
            url: https://argocd.staging.mirafzal.uz
          params:
            server.insecure: true
          rbac:
            create: true
            policy.csv: |
              p, role:app-admins, applications, get, development-apps/*, allow
              p, role:app-admins, applications, sync, development-apps/*, allow
              p, role:app-admins, applications, update, development-apps/*, allow
              p, role:app-admins, applications, delete, development-apps/*, allow
              p, role:app-admins, logs, get, development-apps/*, allow
              p, role:app-admins, exec, create, development-apps/*, allow
              p, role:app-admins, repositories, get, *, allow

              g, MirafzalCompany:developers, role:app-admins
              g, MirafzalCompany:devops, role:admin
            scopes: '[groups]'

        controller:
          resources:
            requests:
              cpu: 1
              memory: 1Gi

        dex:
          enabled: true

        notifications:
          enabled: true
          argocdUrl: "https://argocd.staging.mirafzal.uz"

        redis:
          enabled: true
          resources:
            requests:
              cpu: 100m
              memory: 128Mi

        repoServer:
          replicas: 2
          autoscaling:
            enabled: true
            minReplicas: 2
            maxReplicas: 4
            targetCPUUtilizationPercentage: 80
            targetMemoryUtilizationPercentage: 80
          resources:
            requests:
              cpu: 200m
              memory: 128Mi

        server:
          replicas: 2
          autoscaling:
            enabled: true
            minReplicas: 2
            maxReplicas: 4
            targetCPUUtilizationPercentage: 80
            targetMemoryUtilizationPercentage: 80
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          ingress:
            enabled: true
            hostname: argocd.staging.mirafzal.uz
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              nginx.ingress.kubernetes.io/ssl-passthrough: "true"
              cert-manager.io/cluster-issuer: letsencrypt-prod
            tls: true
#          certificate:
#            enabled: true
#            domain: "argocd.staging.mirafzal.uz"
#            issuer:
#              # -- Certificate issuer group. Set if using an external issuer. Eg. `cert-manager.io`
#              group: "cert-manager.io"
#              # -- Certificate issuer kind. Either `Issuer` or `ClusterIssuer`
#              kind: "ClusterIssuer"
#              # -- Certificate issuer name. Eg. `letsencrypt`
#              name: "letsencrypt-prod"

  destination:
    server: "https://kubernetes.default.svc"
    namespace: argocd

---
apiVersion: v1
kind: Secret
metadata:
  name: private-repo-creds
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repo-creds
stringData:
  type: "git"
  url: "https://github.com/MirafzalCompany"
  password: "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"
  username: "mirafzal"